{"ast":null,"code":"import { useState, useEffect, useCallback } from \"react\";\nimport { server } from \"./server\";\nexport const useQuery = query => {\n  const [state, setState] = useState({\n    data: null\n  });\n  const fetch = useCallback(() => {\n    const fetchApi = async () => {\n      const {\n        data\n      } = await server.fetch({\n        query\n      });\n      setState({\n        data\n      });\n    };\n\n    fetchApi();\n  }, [query]);\n  useEffect(() => {\n    fetch();\n  }, [query, fetch]);\n  return { ...state,\n    refetch: fetch\n  };\n};","map":{"version":3,"sources":["/Users/rubencastroespinoza/Development/Learning /TinyHouseV1/client/src/lib/api/useQuery.ts"],"names":["useState","useEffect","useCallback","server","useQuery","query","state","setState","data","fetch","fetchApi","refetch"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,SAAnB,EAA8BC,WAA9B,QAAiD,OAAjD;AACA,SAASC,MAAT,QAAuB,UAAvB;AAOA,OAAO,MAAMC,QAAQ,GAAiBC,KAAd,IAAgC;AACtD,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAe;AAC/CQ,IAAAA,IAAI,EAAE;AADyC,GAAf,CAAlC;AAIA,QAAMC,KAAK,GAAGP,WAAW,CAAC,MAAM;AAC9B,UAAMQ,QAAQ,GAAG,YAAY;AAC3B,YAAM;AAAEF,QAAAA;AAAF,UAAW,MAAML,MAAM,CAACM,KAAP,CAAoB;AAAEJ,QAAAA;AAAF,OAApB,CAAvB;AACAE,MAAAA,QAAQ,CAAC;AAAEC,QAAAA;AAAF,OAAD,CAAR;AACD,KAHD;;AAKAE,IAAAA,QAAQ;AACT,GAPwB,EAOtB,CAACL,KAAD,CAPsB,CAAzB;AASAJ,EAAAA,SAAS,CAAC,MAAM;AACdQ,IAAAA,KAAK;AACN,GAFQ,EAEN,CAACJ,KAAD,EAAQI,KAAR,CAFM,CAAT;AAIA,SAAO,EAAC,GAAGH,KAAJ;AAAWK,IAAAA,OAAO,EAACF;AAAnB,GAAP;AACD,CAnBM","sourcesContent":["import { useState, useEffect, useCallback } from \"react\";\nimport { server } from \"./server\";\n\ninterface State<TData> {\n  data: TData | null;\n  loading: boolean\n}\n\nexport const useQuery = <TData = any>(query: string) => {\n  const [state, setState] = useState<State<TData>>({\n    data: null,\n  });\n\n  const fetch = useCallback(() => {\n    const fetchApi = async () => {\n      const { data } = await server.fetch<TData>({ query });\n      setState({ data });\n    };\n\n    fetchApi();\n  }, [query]);\n\n  useEffect(() => {\n    fetch();\n  }, [query, fetch]);\n\n  return {...state, refetch:fetch};\n};\n"]},"metadata":{},"sourceType":"module"}