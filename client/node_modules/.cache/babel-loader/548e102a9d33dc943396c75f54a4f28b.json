{"ast":null,"code":"import { useState, useEffect, useCallback } from \"react\";\nimport { server } from \"./server\";\nexport const useQuery = query => {\n  const [state, setState] = useState({\n    data: null,\n    loading: false,\n    error: false\n  });\n  const fetch = useCallback(() => {\n    const fetchApi = async () => {\n      try {\n        setState({\n          data: null,\n          loading: true,\n          error: false\n        });\n        const {\n          data\n        } = await server.fetch({\n          query\n        });\n        setState({\n          data,\n          loading: false,\n          error: false\n        });\n      } catch (err) {\n        setState({\n          data: null,\n          loading: false,\n          error: true\n        });\n        throw console.error(err);\n      }\n    };\n\n    fetchApi();\n  }, [query]);\n  useEffect(() => {\n    fetch();\n  }, [query, fetch]);\n  return { ...state,\n    refetch: fetch\n  };\n};","map":{"version":3,"sources":["/Users/rubencastroespinoza/Development/Learning /TinyHouseV1/client/src/lib/api/useQuery.ts"],"names":["useState","useEffect","useCallback","server","useQuery","query","state","setState","data","loading","error","fetch","fetchApi","err","console","refetch"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,SAAnB,EAA8BC,WAA9B,QAAiD,OAAjD;AACA,SAASC,MAAT,QAAuB,UAAvB;AAQA,OAAO,MAAMC,QAAQ,GAAiBC,KAAd,IAAgC;AACtD,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAe;AAC/CQ,IAAAA,IAAI,EAAE,IADyC;AAE/CC,IAAAA,OAAO,EAAC,KAFuC;AAG/CC,IAAAA,KAAK,EAAE;AAHwC,GAAf,CAAlC;AAMA,QAAMC,KAAK,GAAGT,WAAW,CAAC,MAAM;AAI9B,UAAMU,QAAQ,GAAG,YAAY;AAC3B,UAAI;AACJL,QAAAA,QAAQ,CAAC;AAACC,UAAAA,IAAI,EAAE,IAAP;AAAaC,UAAAA,OAAO,EAAC,IAArB;AAA2BC,UAAAA,KAAK,EAAC;AAAjC,SAAD,CAAR;AACA,cAAM;AAAEF,UAAAA;AAAF,YAAW,MAAML,MAAM,CAACQ,KAAP,CAAoB;AAAEN,UAAAA;AAAF,SAApB,CAAvB;AACAE,QAAAA,QAAQ,CAAC;AAAEC,UAAAA,IAAF;AAAQC,UAAAA,OAAO,EAAC,KAAhB;AAAuBC,UAAAA,KAAK,EAAC;AAA7B,SAAD,CAAR;AACC,OAJD,CAIE,OAAMG,GAAN,EAAU;AACRN,QAAAA,QAAQ,CAAC;AAACC,UAAAA,IAAI,EAAC,IAAN;AAAYC,UAAAA,OAAO,EAAE,KAArB;AAA4BC,UAAAA,KAAK,EAAC;AAAlC,SAAD,CAAR;AACA,cAAMI,OAAO,CAACJ,KAAR,CAAcG,GAAd,CAAN;AACH;AACF,KATD;;AAWAD,IAAAA,QAAQ;AACT,GAhBwB,EAgBtB,CAACP,KAAD,CAhBsB,CAAzB;AAkBAJ,EAAAA,SAAS,CAAC,MAAM;AACdU,IAAAA,KAAK;AACN,GAFQ,EAEN,CAACN,KAAD,EAAQM,KAAR,CAFM,CAAT;AAIA,SAAO,EAAC,GAAGL,KAAJ;AAAWS,IAAAA,OAAO,EAACJ;AAAnB,GAAP;AACD,CA9BM","sourcesContent":["import { useState, useEffect, useCallback } from \"react\";\nimport { server } from \"./server\";\n\ninterface State<TData> {\n  data: TData | null;\n  loading: boolean;\n  error:boolean;\n}\n\nexport const useQuery = <TData = any>(query: string) => {\n  const [state, setState] = useState<State<TData>>({\n    data: null,\n    loading:false,\n    error: false,\n  });\n\n  const fetch = useCallback(() => { \n    \n\n  \n    const fetchApi = async () => {\n      try {\n      setState({data: null, loading:true, error:false})\n      const { data } = await server.fetch<TData>({ query });\n      setState({ data, loading:false, error:false});\n      } catch(err){\n          setState({data:null, loading: false, error:true})\n          throw console.error(err)\n      }\n    };\n\n    fetchApi();\n  }, [query]);\n\n  useEffect(() => {\n    fetch();\n  }, [query, fetch]);\n\n  return {...state, refetch:fetch};\n};\n"]},"metadata":{},"sourceType":"module"}